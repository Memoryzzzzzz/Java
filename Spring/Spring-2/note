1. SpringAOP

1). 加入 jar 包：

aopalliance-1.0.jar
aopalliance-alpha1.jar
aspectj-1.9.3.RC1.jar
aspectj-1.9.3.RC1-src.jar
aspectjweaver-1.9.3.RC1.jar
commons-logging-1.2.jar

2). 在配置文件中加入 AOP 的命名空间

3). 基于注解的方式

①. 在配置文件中加入如下配置：

<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

②. 把横切关注点的代码抽象到切面的类中，
i. 切面首先是一个 IOC 中的 bean，即加入 @Component
ii. 切面还需要加入 @Aspect 注解

③. 在类中声明各种通知：
i. 声明一个方法
ii. 在方法前加入 @Before 注解

④. 可以在通知方法中声明一个类型为 JoinPoint 的参数，然后就能访问链接细节。如方法名称和参数值。

@Aspect
@Component
public class LoggingAspect {

    // 声明该方法是一个前置通知：在目标方法开始之前执行
    @Before("execution(public int com.test.spring.aop.impl.ArithmeticCalculator.*(int, int))")
    public void beforeMothod(JoinPoint joinPoint){
        String methodName = joinPoint.getSignature().getName();
        List<Object> args = Arrays.asList(joinPoint.getArgs());

        System.out.println("The method " + methodName + " begins with " + args);
    }
}